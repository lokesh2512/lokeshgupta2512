"use strict";
/*
 * Wire
 * Copyright (C) 2018 Wire Swiss GmbH
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see http://www.gnu.org/licenses/.
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
const proteus_1 = require("@wireapp/proteus");
const DecryptionError_1 = require("./DecryptionError");
class CryptoboxSession {
    constructor(id, session) {
        this.id = id;
        this.session = session;
        Object.freeze(this);
    }
    decrypt(ciphertext, pk_store) {
        if (ciphertext.byteLength === 0) {
            return Promise.reject(new DecryptionError_1.DecryptionError('Cannot decrypt an empty ArrayBuffer.'));
        }
        const envelope = proteus_1.message.Envelope.deserialise(ciphertext);
        return this.session.decrypt(pk_store, envelope);
    }
    encrypt(plaintext) {
        return this.session.encrypt(plaintext).then((ciphertext) => ciphertext.serialise());
    }
    fingerprint_local() {
        return this.session.local_identity.public_key.fingerprint();
    }
    fingerprint_remote() {
        return this.session.remote_identity.fingerprint();
    }
}
exports.CryptoboxSession = CryptoboxSession;
//# sourceMappingURL=CryptoboxSession.js.map