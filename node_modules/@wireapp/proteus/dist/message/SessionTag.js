"use strict";
/*
 * Wire
 * Copyright (C) 2018 Wire Swiss GmbH
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see http://www.gnu.org/licenses/.
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
const sodium = require("libsodium-wrappers-sumo");
const DecodeError_1 = require("../errors/DecodeError");
const ClassUtil = require("../util/ClassUtil");
const RandomUtil = require("../util/RandomUtil");
class SessionTag {
    constructor() {
        this.tag = new Uint8Array([]);
    }
    static new() {
        const length = 16;
        const st = ClassUtil.new_instance(SessionTag);
        st.tag = RandomUtil.random_bytes(length);
        return st;
    }
    toString() {
        return sodium.to_hex(this.tag);
    }
    encode(encoder) {
        return encoder.bytes(this.tag);
    }
    static decode(decoder) {
        const length = 16;
        const bytes = new Uint8Array(decoder.bytes());
        if (bytes.byteLength !== length) {
            throw new DecodeError_1.DecodeError.InvalidArrayLen(`Session tag should be 16 bytes, not ${bytes.byteLength} bytes.`, DecodeError_1.DecodeError.CODE.CASE_303);
        }
        const st = ClassUtil.new_instance(SessionTag);
        st.tag = new Uint8Array(bytes);
        return st;
    }
}
exports.SessionTag = SessionTag;
//# sourceMappingURL=SessionTag.js.map