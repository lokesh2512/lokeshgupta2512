"use strict";
/*
 * Wire
 * Copyright (C) 2018 Wire Swiss GmbH
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see http://www.gnu.org/licenses/.
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
const ClassUtil = require("../util/ClassUtil");
const KeyDerivationUtil = require("../util/KeyDerivationUtil");
const MemoryUtil = require("../util/MemoryUtil");
const CipherKey_1 = require("./CipherKey");
const MacKey_1 = require("./MacKey");
class DerivedSecrets {
    constructor() {
        this.cipher_key = new CipherKey_1.CipherKey();
        this.mac_key = new MacKey_1.MacKey(new Uint8Array([]));
    }
    static kdf(input, salt, info) {
        const byte_length = 64;
        const output_key_material = KeyDerivationUtil.hkdf(salt, input, info, byte_length);
        const cipher_key = new Uint8Array(output_key_material.buffer.slice(0, 32));
        const mac_key = new Uint8Array(output_key_material.buffer.slice(32, 64));
        MemoryUtil.zeroize(output_key_material.buffer);
        const ds = ClassUtil.new_instance(DerivedSecrets);
        ds.cipher_key = CipherKey_1.CipherKey.new(cipher_key);
        ds.mac_key = new MacKey_1.MacKey(mac_key);
        return ds;
    }
    /**
     * @param input Initial key material (usually the Master Key) in byte array format
     * @param info Key Derivation Data
     */
    static kdf_without_salt(input, info) {
        return this.kdf(input, new Uint8Array(0), info);
    }
}
exports.DerivedSecrets = DerivedSecrets;
//# sourceMappingURL=DerivedSecrets.js.map