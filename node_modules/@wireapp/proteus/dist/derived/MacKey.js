"use strict";
/*
 * Wire
 * Copyright (C) 2018 Wire Swiss GmbH
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see http://www.gnu.org/licenses/.
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
const sodium = require("libsodium-wrappers-sumo");
class MacKey {
    /**
     * @param key Mac Key in byte array format generated by derived secrets
     */
    constructor(key) {
        this.key = key;
    }
    /** Hash-based message authentication code */
    sign(msg) {
        return sodium.crypto_auth_hmacsha256(msg, this.key);
    }
    /**
     * Verifies the signature of a given message by resigning it.
     * @param signature Mac signature (HMAC) which needs to get verified
     * @param msg Unsigned message
     */
    verify(signature, msg) {
        const verify = sodium.crypto_auth_hmacsha256_verify(signature, msg, this.key);
        return verify;
    }
    encode(encoder) {
        encoder.object(1);
        encoder.u8(0);
        return encoder.bytes(this.key);
    }
    static decode(decoder) {
        let key_bytes = new Uint8Array([]);
        const nprops = decoder.object();
        for (let index = 0; index <= nprops - 1; index++) {
            switch (decoder.u8()) {
                case 0:
                    key_bytes = new Uint8Array(decoder.bytes());
                    break;
                default:
                    decoder.skip();
            }
        }
        return new MacKey(key_bytes);
    }
}
exports.MacKey = MacKey;
//# sourceMappingURL=MacKey.js.map