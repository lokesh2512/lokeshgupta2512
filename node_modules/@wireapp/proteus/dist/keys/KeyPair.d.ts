import * as CBOR from '@wireapp/cbor';
import { PublicKey } from './PublicKey';
import { SecretKey } from './SecretKey';
/** Construct an ephemeral key pair. */
export declare class KeyPair {
    public_key: PublicKey;
    secret_key: SecretKey;
    constructor();
    static new(): Promise<KeyPair>;
    /**
     * Ed25519 keys can be converted to Curve25519 keys, so that the same key pair can be
     * used both for authenticated encryption (`crypto_box`) and for signatures (`crypto_sign`).
     * @param ed25519_key_pair Key pair based on Edwards-curve (Ed25519)
     * @returns Constructed private key
     * @see https://download.libsodium.org/doc/advanced/ed25519-curve25519.html
     */
    private _construct_private_key;
    /**
     * @param ed25519_key_pair Key pair based on Edwards-curve (Ed25519)
     * @returns Constructed public key
     */
    private _construct_public_key;
    encode(encoder: CBOR.Encoder): CBOR.Encoder;
    static decode(decoder: CBOR.Decoder): KeyPair;
}
